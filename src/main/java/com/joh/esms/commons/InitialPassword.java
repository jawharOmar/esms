package com.joh.esms.commons;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

public class InitialPassword {
	public static void main(String[] args) {
		BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();
		System.out.println(passwordEncoder.encode("k0r3k@2020"));
		
		String d="SELECT A.I_PRODUCT,PRODUCT_CODE,PRODUCT_NAME,UNIT_TYPE_NAME,STOCK_LEVEL,COST,PRICE,CATEGORY,PACKET_SIZE,MINIMUM_STOCK_LEVEL,ROUND(LP.PAYMENT_AMOUNT/LP.QUANTITY,3) AS LAST_PRICE,UNIT,I_ATTACHED_FILE\n"
				+ "\t\t\tFROM ( SELECT P.I_PRODUCT,P.PRODUCT_CODE,P.PRODUCT_NAME,PUT.UNIT_TYPE_NAME,\n"
				+ "\t\t\t\tIFNULL(SUM(PS.QUANTITY-PS.SOLD_QUANTITY),0) AS STOCK_LEVEL,ROUND(SUM(PAYMENT_AMOUNT)/SUM(QUANTITY),3) as COST,P.PRICE,PC.CATEGORY_NAME AS CATEGORY,PACKET_SIZE,MINIMUM_STOCK_LEVEL,MAX(I_PRODUCT_STEPUP) AS LAST_PURCHASE,UNIT,I_ATTACHED_FILE\n"
				+ "\t\t\t\tFROM PRODUCTS P LEFT OUTER JOIN PRODUCT_UNIT_TYPES PUT USING(I_PRODUCT_UNIT_TYPE) LEFT OUTER JOIN PRODUCT_CATEGORIES PC USING(I_PRODUCT_CATEGORY) \n"
				+ "\t\t\t\tLEFT OUTER JOIN PRODUCT_STEPUPS PS ON P.I_PRODUCT=PS.I_PRODUCT\n"
				+ "\t\t\t\tGROUP BY P.I_PRODUCT ORDER BY PRODUCT_CODE) A\n"
				+ "\t\t\t\tLEFT OUTER JOIN PRODUCT_STEPUPS LP ON LP.I_PRODUCT_STEPUP=LAST_PURCHASE;";
		System.out.println(d);
	}
}
