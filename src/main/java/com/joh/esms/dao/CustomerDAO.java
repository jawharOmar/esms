package com.joh.esms.dao;

import java.util.Date;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.PagingAndSortingRepository;

import com.joh.esms.model.Customer;

public interface CustomerDAO extends PagingAndSortingRepository<Customer, Integer>, CustomerDAOExt {

	@Query(value = "SELECT ROUND(IFNULL((SELECT SUM(IFNULL(TOTAL_PRICE,0)-IFNULL(DISCOUNT,0)-IFNULL(TOTAL_PAYMENT,0))\n" +
			"FROM CUSTOMER_ORDERS  WHERE I_CUSTOMER=?1 ),0)-IFNULL((SELECT SUM(IFNULL(TOTAL_PRICE-TOTAL_PAID,0))\n" +
			"FROM CUSTOMER_ORDER_RETURNS  WHERE I_CUSTOMER=?1 ),0)-IFNULL( (SELECT \n" +
			"SUM(TOTAL_PAYMENT) + SUM(if(DISCOUNT is null,0,DISCOUNT)) FROM CUSTOMER_PAYMENTS WHERE I_CUSTOMER=?1),0),3) TOTAL_LOAN;", nativeQuery = true)
	Double totalLoan(int id);

	@Query(value = "SELECT ROUND(IFNULL((SELECT SUM(IFNULL(TOTAL_PRICE,0)-IFNULL(DISCOUNT,0)-IFNULL(TOTAL_PAYMENT,0))\n" +
			"FROM CUSTOMER_ORDERS  WHERE I_CUSTOMER=?1 AND ORDER_TIME<=?2),0)-IFNULL((SELECT SUM(IFNULL(TOTAL_PRICE-TOTAL_PAID,0))\n" +
			"FROM CUSTOMER_ORDER_RETURNS  WHERE I_CUSTOMER=?1 AND CUSTOMER_ORDER_RETURN_TIME<=?2 ),0)-IFNULL( (SELECT \n" +
			"SUM(TOTAL_PAYMENT) + SUM(if(DISCOUNT is null,0,DISCOUNT)) FROM CUSTOMER_PAYMENTS WHERE I_CUSTOMER=?1 AND PAYMENT_TIME<=?2),0),3) TOTAL_LOAN;", nativeQuery = true)
	Double totalLoanByTime(int id, Date date);


	@Query(value = "SELECT ROUND(IFNULL((SELECT SUM(IFNULL(TOTAL_PRICE,0)-IFNULL(DISCOUNT,0)-IFNULL(TOTAL_PAYMENT,0))\n" +
			"FROM CUSTOMER_ORDERS  WHERE I_CUSTOMER=?1  AND I_CUSTOMER_PROJECT =?2),0)-IFNULL((SELECT SUM(IFNULL(TOTAL_PRICE-TOTAL_PAID,0))\n" +
			"FROM CUSTOMER_ORDER_RETURNS  WHERE I_CUSTOMER=?1 AND I_CUSTOMER_PROJECT =?2),0)-IFNULL( (SELECT \n" +
			"SUM(TOTAL_PAYMENT) + SUM(if(DISCOUNT is null,0,DISCOUNT)) FROM CUSTOMER_PAYMENTS WHERE I_CUSTOMER=?1 AND I_CUSTOMER_PROJECT=?2),0),3) TOTAL_LOAN;",nativeQuery = true)
	Double totalLoanByProject(int id,int projectId);

}
